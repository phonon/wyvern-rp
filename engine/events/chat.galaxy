//=========================================================
//		Wyvern Roleplaying Engine
//		Copyright (c) 2014 , Xethyr.407 [NA] / @nmosfet
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================


// libwyv_process_chat_event
// ============================
// redirects processing as needed:
// IF message begins with "<<" , directly output the message
// ELSE, parse message
bool libwyv_process_chat_event(bool testConds, bool runActions) {
	unitgroup target = UnitGroupEmpty();
	libwyv_player[EventPlayer()].chat_msg = libwyv_string_trim(EventChatMessage(false));

	// "<< " directly dumps message to OOC (if player not muted)
	if ( StringWord( libwyv_player[EventPlayer()].chat_msg, 1) == "<<" &&  !libwyv_player[EventPlayer()].muted ) {
		libwyv_player[EventPlayer()].chat_msg = libwyv_string_trim( StringSub(libwyv_player[EventPlayer()].chat_msg, 3, StringLength(libwyv_player[EventPlayer()].chat_msg)) );
		libwyv_chat_print_OOC( libwyv_player[EventPlayer()].chat_msg , EventPlayer());
	}
	else if( !libwyv_player[EventPlayer()].disabled ) {
		// if player is mouse-click spawning, set context to spawn splat
		if( libwyv_player[EventPlayer()].is_placing_unit ) {
			UnitGroupAdd(target, libwyv_player[EventPlayer()].spawn_splat);
		}
		else {
			target = UnitGroupSelected(EventPlayer());
			target = libwyv_enforce_unit_permissions(target, EventPlayer());
		}

		libwyv_chat_parse(libwyv_player[EventPlayer()].chat_msg, EventPlayer(), target);
	}
	else if( !libwyv_player[EventPlayer()].muted ){
		libwyv_chat_print_OOC( libwyv_player[EventPlayer()].chat_msg , EventPlayer());
	}

	// TODO: chat message logging

	return false;
}
