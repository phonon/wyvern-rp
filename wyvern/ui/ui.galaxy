//=========================================================
//		Wyvern Roleplaying Engine
//		Copyright (c) 2014 , Xethyr.407 [NA] / @90-proof
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

include "wyvern/ui/modelpreviewer.galaxy"

// number of ui panels for the ui utility toolbar
static const int LIBWYV_UI_NPANELS = 2;

// data table identifier prefix for linking a toolbar button to its panel
// Data table name is "ui_panel_[btn ID]", where the [btn ID] is the integer
// value for the dialog control button on the toolbar for the panel
static const string LIBWYV_UI_PANEL_DTABLE_PREFIX = "ui_panel_";

// Type: libwyv_ui_panel
// ===============
// information about each dialog panel to create toolbar buttons
struct libwyv_ui_panel {
	int dialog;		// dialog panel
	int btn;		// toolbar button dialog control
	string name;	// name of the panel
	string icon;	// string path for toolbar icon
};
// list of the dialog panels in the ui
static libwyv_ui_panel[LIBWYV_UI_NPANELS] libwyv_ui_panels;

// visibility state of each ui panel (true - on, false - off)
// must be tracked for each player
static bool[LIBWYV_UI_NPANELS][LIBWYV_MAX_PLAYERS] libwyv_ui_panel_state;

// dialog toolbar on right side of the screen to access ui panels
int libwyv_ui_panel_toolbar;

// libwyv_ui_initialize_panels
// ====================
// Sets array list of each dialog panel info struct.
// These must be manually set for each panel.
static void libwyv_ui_initialize_panels() {
	libwyv_ui_panels[0].dialog = libwyv_ui_modelpreviewer;
	libwyv_ui_panels[0].name = "Model Previewer";
	libwyv_ui_panels[0].icon = "Assets\\Textures\\btn-ability-protoss-phaseshift.dds";

	libwyv_ui_panels[1].dialog = -1;	// TODO: make it
	libwyv_ui_panels[1].name = "Chat Log";
	libwyv_ui_panels[1].icon = "Assets\\Textures\\ui_cursor-interactive-talk_ingamehd.dds";
}

// libwyv_ui_initialize
// =====================
// Initializes all ui panels and creates an array list of the panel info.
// Creates the Wyvern UI toolbar that allows access to the ui panels through
// dialog control buttons.
// Adds event triggers for the UI toolbar buttons.
void libwyv_ui_initialize() {
	int i;
	int btn;

	// initialize panels
	libwyv_ui_modelpreviewer_init();

	// set the panels list
	libwyv_ui_initialize_panels();

	// create the Wyvern ui toolbar
	libwyv_ui_panel_toolbar = libwyv_create_dialog(80, 15 + 50*LIBWYV_UI_NPANELS, c_anchorRight, -22, -140);
	DialogSetVisible(libwyv_ui_panel_toolbar, PlayerGroupAll(), true);

	// initialize toolbar buttons
	for( i = 0; i < LIBWYV_UI_NPANELS; i += 1 ) {
		// initialize the button: link its dialog control number of the button
		// to the panel index in the libwyv_ui_panel array list through
		// the data table
		btn = libwyv_create_dialog_btn(libwyv_ui_panel_toolbar, 54, 54, c_anchorTopLeft, 5, 5 + i*50, libwyv_ui_panels[i].name, "");
		libwyv_ui_panels[i].btn = btn;
		DataTableSetInt(true, LIBWYV_UI_PANEL_DTABLE_PREFIX + IntToString(btn), i);

		// create icon for the button
		libNtve_gf_CreateDialogItemImage(libwyv_ui_panel_toolbar, 46, 46, c_anchorTopLeft, 9, 9 + i*50, StringToText(""), libwyv_ui_panels[i].icon, c_triggerImageTypeNormal, false, Color(100, 100, 100), c_triggerBlendModeNormal);
	}

	// add event triggers for ui dialog controls
	TriggerAddEventDialogControl(TriggerCreate("libwyv_ui_panel_toggle"), c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

// libwyv_ui_panel_toggle
// =====================
// Toggles a ui dialog panel visibility on/off from toolbar dialog control
// buttons. Button is linked to a ui panel in the libwyv_ui_panel array list
// through a data table, so if data table entry exists, then toolbar button
// was clicked.
// (LIBWYV_UI_PANEL_NONE is defined as -1 in player.galaxy)
bool libwyv_ui_panel_toggle(bool testConds, bool runActions) {
	string panel_identifier = LIBWYV_UI_PANEL_DTABLE_PREFIX + IntToString(EventDialogControl());
	int panel;
	int active_panel = libwyv_player[EventPlayer()].active_ui_panel;

	// toggle the ui panel if the dialog control button is linked to a panel
	if( DataTableValueExists(true, panel_identifier) ) {
		panel = DataTableGetInt(true, panel_identifier);

		// turn off existing active panel (if any)
		if( active_panel != LIBWYV_UI_PANEL_NONE) {
			DialogSetVisible(libwyv_ui_panels[active_panel].dialog, PlayerGroupSingle(EventPlayer()), false);
			// toggle off toolbar button
			libNtve_gf_SetDialogItemToggled(libwyv_ui_panels[active_panel].btn, false, PlayerGroupSingle(EventPlayer()));
		}

		// toggle ui panel visibility and set the active panel
		if( panel != active_panel ) {
			DialogSetVisible(libwyv_ui_panels[panel].dialog, PlayerGroupSingle(EventPlayer()), true);
			libwyv_player[EventPlayer()].active_ui_panel = panel;
			// toggle on toolbar button
			libNtve_gf_SetDialogItemToggled(libwyv_ui_panels[panel].btn, true, PlayerGroupSingle(EventPlayer()));
		} else { // same dialog just turned off, so set active panel to none
			libwyv_player[EventPlayer()].active_ui_panel = LIBWYV_UI_PANEL_NONE;
		}
	}

	return true;
}
