//=========================================================
//		Wyvern Roleplaying Engine
//		Copyright (c) 2014 , Xethyr.407 [NA] / @90-proof
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

// guess for the max number of catalog models
// this is required because an array of model catalog entries must be used
// the array must be declared with a fixed index size
static const int LIBWYV_NCATALOGMAX = 10000;

// intitial model preview scale and the scale size increment step
static const fixed LIBWYV_UI_MODELPREVIEW_SCALE_INIT = 0.15;
static const string LIBWYV_UI_MODELPREVIEW_SCALE_AMSG = "SetScale 0.15 0.01";
static const fixed LIBWYV_UI_MODELPREVIEW_SCALE_STEP = 0.01;

// list of all catalog models
static string[LIBWYV_NCATALOGMAX] libwyv_model_catalog;

// index shift for a catalog model while filtering the list
static int[LIBWYV_MAX_PLAYERS][LIBWYV_NCATALOGMAX] libwyv_model_catalog_shift;

// dialog for the model previewer
int libwyv_ui_modelpreviewer;

// dialog control items
static int libwyv_ui_modelpreview_list;
static int libwyv_ui_modelpreview_rotl_btn;
static int libwyv_ui_modelpreview_rotr_btn;
static int libwyv_ui_modelpreview_scaleup_btn;
static int libwyv_ui_modelpreview_scaledown_btn;
static int libwyv_ui_modelpreview_search;
static int libwyv_ui_modelpreview_search_btn;
static int libwyv_ui_modelpreview_search_reset;
static int libwyv_ui_modelpreview_anim;
static int libwyv_ui_modelpreview_anim_btn;
static int libwyv_ui_modelpreview_anim_reset;
static int libwyv_ui_modelpreview_attach;
static int libwyv_ui_modelpreview_attach_btn;
static int libwyv_ui_modelpreview_attach_reset;

// Type: libwyv_ui_modelpreviewer_model
// ===========
// individual player tracked data for model preview actor in the previewer
struct libwyv_ui_modelpreviewer_model {
	int portrait;
	fixed scale;
	fixed angle;
};
static libwyv_ui_modelpreviewer_model[LIBWYV_MAX_PLAYERS] libwyv_ui_modelpreview;

// libwyv_ui_modelpreviewer_init
// ==================
// Creates the model previewer ui panel (except portrait, which is separate
// for each player)
void libwyv_ui_modelpreviewer_init() {
	int i;
	int nmodels = CatalogEntryCount(c_gameCatalogModel);

	libwyv_ui_modelpreviewer = libwyv_create_dialog(600, 700, c_anchorRight, 60, -150);
	libwyv_ui_modelpreview_list = libwyv_create_dialog_list(libwyv_ui_modelpreviewer, 260, 382, c_anchorTopLeft, 14, 44);

	// portrait model adjustment buttons
	libwyv_ui_modelpreview_rotr_btn = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 40, 40, c_anchorTopRight, 85, 370, "Rotate right", "" );
	libwyv_ui_modelpreview_scaleup_btn = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 40, 40, c_anchorTopRight, 130, 370, "Scale up", "" );
	libwyv_ui_modelpreview_scaledown_btn = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 40, 40, c_anchorTopRight, 160, 370, "Scale down", "" );
	libwyv_ui_modelpreview_rotl_btn = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 40, 40, c_anchorTopRight, 205, 370, "Rotate left", "" );

	// search bar
	libwyv_ui_modelpreview_search = libwyv_create_dialog_editbox(libwyv_ui_modelpreviewer, 480, 50, c_anchorTopLeft, 10, 430);
	libwyv_ui_modelpreview_search_btn = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 50, 50, c_anchorCenter, 0, 0, "Search model", "" );
	libwyv_ui_modelpreview_search_reset = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 50, 50, c_anchorCenter, 0, 0, "Reset", "" );
	DialogControlSetPositionRelative(libwyv_ui_modelpreview_search_btn, PlayerGroupAll(), c_anchorLeft, libwyv_ui_modelpreview_search, c_anchorRight, 0, 0);
	DialogControlSetPositionRelative(libwyv_ui_modelpreview_search_reset, PlayerGroupAll(), c_anchorLeft, libwyv_ui_modelpreview_search_btn, c_anchorRight, 0, 0);

	// play animation
	libwyv_ui_modelpreview_anim = libwyv_create_dialog_editbox(libwyv_ui_modelpreviewer, 310, 50, c_anchorTopLeft, 180, 540);
	libwyv_ui_modelpreview_anim_btn = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 50, 50, c_anchorCenter, 0, 0, "Go", "" );
	libwyv_ui_modelpreview_anim_reset = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 50, 50, c_anchorCenter, 0, 0, "Reset", "" );
	DialogControlSetPositionRelative(libwyv_ui_modelpreview_anim_btn, PlayerGroupAll(), c_anchorLeft, libwyv_ui_modelpreview_anim, c_anchorRight, 0, 0);
	DialogControlSetPositionRelative(libwyv_ui_modelpreview_anim_reset, PlayerGroupAll(), c_anchorLeft, libwyv_ui_modelpreview_anim_btn, c_anchorRight, 0, 0);

	// attach point axis test
	libwyv_ui_modelpreview_attach = libwyv_create_dialog_editbox(libwyv_ui_modelpreviewer, 310, 50, c_anchorTopLeft, 180, 590);
	libwyv_ui_modelpreview_attach_btn = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 50, 50, c_anchorCenter, 0, 0, "Go", "" );
	libwyv_ui_modelpreview_attach_reset = libwyv_create_dialog_btn(libwyv_ui_modelpreviewer, 50, 50, c_anchorCenter, 0, 0, "Reset", "" );
	DialogControlSetPositionRelative(libwyv_ui_modelpreview_attach_btn, PlayerGroupAll(), c_anchorLeft, libwyv_ui_modelpreview_attach, c_anchorRight, 0, 0);
	DialogControlSetPositionRelative(libwyv_ui_modelpreview_attach_reset, PlayerGroupAll(), c_anchorLeft, libwyv_ui_modelpreview_attach_btn, c_anchorRight, 0, 0);

	// create button icons
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_rotr_btn, 30, 30, LIBWYV_UI_ICON_RIGHT);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_scaleup_btn, 30, 30, LIBWYV_UI_ICON_PLUS);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_scaledown_btn, 30, 30, LIBWYV_UI_ICON_MINUS);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_rotl_btn, 30, 30, LIBWYV_UI_ICON_LEFT);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_search_btn, 40, 40, LIBWYV_UI_ICON_SEARCH);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_search_reset, 40, 40, LIBWYV_UI_ICON_RESET);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_anim_btn, 40, 40, LIBWYV_UI_ICON_GO);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_anim_reset, 40, 40, LIBWYV_UI_ICON_RESET);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_attach_btn, 40, 40, LIBWYV_UI_ICON_GO);
	libwyv_create_dialog_btn_icon(libwyv_ui_modelpreviewer, libwyv_ui_modelpreview_attach_reset, 40, 40, LIBWYV_UI_ICON_RESET);

	// create static labels
	libwyv_create_dialog_label(libwyv_ui_modelpreviewer, 240, 30, c_anchorTopLeft, 14, 12, "Preview model:", LIBWYV_UI_HEADER2);
	libwyv_create_dialog_label(libwyv_ui_modelpreviewer, 230, 60, c_anchorTopLeft, 14, 510, "Model options:", LIBWYV_UI_HEADER2);
	libwyv_create_dialog_label(libwyv_ui_modelpreviewer, 130, 60, c_anchorTopLeft, 0, 0, "Play anim:", LIBWYV_UI_HEADER3);
	DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, libwyv_ui_modelpreview_anim, c_anchorLeft, 0, 0);
	libwyv_create_dialog_label(libwyv_ui_modelpreviewer, 160, 60, c_anchorTopLeft, 0, 0, "Attach test:", LIBWYV_UI_HEADER3);
	DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, libwyv_ui_modelpreview_attach, c_anchorLeft, 0, 0);

	// populate the model preview list
	for(i = 0; i < nmodels && i < LIBWYV_NCATALOGMAX; i += 1) {
		libwyv_model_catalog[i] = CatalogEntryGet(c_gameCatalogModel, i);
		DialogControlAddItem(libwyv_ui_modelpreview_list, PlayerGroupAll(), StringToText(libwyv_model_catalog[i]));
	}

	// add model previewer trigger events
	TriggerAddEventDialogControl(TriggerCreate("libwyv_ui_model_preview_select"), c_playerAny, libwyv_ui_modelpreview_list, c_triggerControlEventTypeSelectionChanged);
}

// libwyv_ui_modelpreviewer_init_player
// =============
// Creates the portrait for each player. Each player must have its own
// dialog control portrait so that the model in the portrait will be
// unique for each player
void libwyv_ui_modelpreviewer_init_player(int p) {
	libwyv_ui_modelpreview[p].portrait = libwyv_create_dialog_portrait(libwyv_ui_modelpreviewer, 250, 300, c_anchorTopRight, 44, 56);
	libNtve_gf_SetDialogItemUseTransition(libwyv_ui_modelpreview[p].portrait, false, PlayerGroupSingle(p));
	libNtve_gf_SetDialogItemCamera(libwyv_ui_modelpreview[p].portrait, "Star2CameraLow01", PlayerGroupSingle(p));
	DialogControlSetVisible(libwyv_ui_modelpreview[p].portrait, PlayerGroupAll(), false);
	DialogControlSetVisible(libwyv_ui_modelpreview[p].portrait, PlayerGroupSingle(p), true);

	// initialize the portrait model
	libNtve_gf_SetDialogItemModel(libwyv_ui_modelpreview[p].portrait, "MercHavenChick", PlayerGroupSingle(p));
	ActorSend(ActorFromDialogControl(libwyv_ui_modelpreview[p].portrait), LIBWYV_UI_MODELPREVIEW_SCALE_AMSG);
}

// libwyv_ui_model_preview_select
// ==============
// Event trigger for when a model in the list has been selected
// -> Sets the model in the portrait, rescales, and resets facing
bool libwyv_ui_model_preview_select(bool testConds, bool runActions) {
	string model;
	int player = EventPlayer();
	int i;
	int j;

	i = DialogControlGetSelectedItem(libwyv_ui_modelpreview_list, player);
	j = libwyv_model_catalog_shift[player][i]; //in case a search was run, the index will be offset
	model = libwyv_model_catalog[i + j];

	libNtve_gf_SetDialogItemModel(libwyv_ui_modelpreview[player].portrait, model, PlayerGroupSingle(EventPlayer()));
	ActorSend(ActorFromDialogControl(libwyv_ui_modelpreview[player].portrait), "ModelSwap {" + model + "}");
	ActorSend(ActorFromDialogControl(libwyv_ui_modelpreview[player].portrait), LIBWYV_UI_MODELPREVIEW_SCALE_AMSG);
	ActorSend(ActorFromDialogControl(libwyv_ui_modelpreview[player].portrait), "SetFacing 0");

	libwyv_ui_modelpreview[player].scale = LIBWYV_UI_MODELPREVIEW_SCALE_INIT;
	libwyv_ui_modelpreview[player].angle = 0;

	return true;
}
