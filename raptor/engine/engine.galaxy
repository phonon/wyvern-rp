//=========================================================
//		Raptor Roleplaying Engine
//		Copyright (c) 2014 , Xethyr.407 [NA] / @90-proof
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

// LOAD ENGINE DEPENDENCIES:
// (dependency order matters)

// scripts
// =============
// Contains various utility functions used throughout engine
include "raptor/engine/utility/scripts.galaxy"

// permissions
// =============
// Contains functions for player permissions
// (included before player.galaxy because player requires
// permissions level constants in here)
include "raptor/engine/permissions.galaxy"

// player
// =============
// Contains any important player specific variables during 
// runtime of the engine (e.g. player mouse position, chat lines,...)
include "raptor/engine/player.galaxy"

// output
// =============
// All functions for output to the custom chat frame
include "raptor/engine/output.galaxy"

// data
// =============
// defines SCII data catalog constants used for certain commands,
// and include data catalog search and catalog alias functions
include "raptor/engine/data/data.galaxy"

// settings
// =============
// Contains ingame global settings
include "raptor/engine/settings.galaxy"

// bank
// =============
// Contains custom functions for writing to player banks
include "raptor/engine/bank.galaxy"

// chat
// =============
// All player chat/commands events framework and parsing
// Also includes frameworks for variables, aliases, and templates.
include "raptor/engine/chat/chat.galaxy"

// unit
// =============
// Unit spawn related functions
include "raptor/engine/unit.galaxy"

// events
// =============
// Events that require triggers to run and update things
// e.g. player moves mouse, unit enters region
include "raptor/engine/events/events.galaxy"

// debug
// =============
// tools for debugging
include "raptor/engine/debug.galaxy"

// engine version
const int LIBRPTR_BUILD_VERSION = 0;
const int LIBRPTR_BUILD_SUB_VERSION = 1;
const string LIBRPTR_BUILD_VERSION_MODIFIER = "-alpha";

void librptr_engine_initialize() {
	int player = 1;
	bool admin_set = false;
	
	// intialize engine
	librptr_settings_initialize();
	librptr_preplaced_unit_initialize();
	librtpr_events_initialize();
	
	// initialize players
	while ( player < LIBRPTR_MAX_PLAYERS ) {
		if( PlayerType(player) == c_playerTypeUser && PlayerStatus(player) == c_playerStatusActive ) {
			librptr_player_initialize(player);
			librptr_chat_initialize_player(player);
			
			// give admin to first active player (assumes player 1 is lobby host and should be default admin)
			if( !admin_set ) {
				librptr_player[player].permission_level = LIBRPTR_PERMISSIONS_LEVEL_ADMIN;
				admin_set = true;
			}
		}
		player += 1;
	}
	
}