//=========================================================
//		Raptor Roleplaying Engine
//		Copyright (c) 2014 , Xethyr.407 [NA] / @90-proof
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================


// librptr_command_info
// ====================
// just prints out a line of text to everyone
bool librptr_command_info(bool testConds, bool runActions) {
	librptr_print_output("Raptor Engine v" + IntToString(LIBRPTR_BUILD_VERSION) + "." + IntToString(LIBRPTR_BUILD_SUB_VERSION) + LIBRPTR_BUILD_VERSION_MODIFIER, EventPlayer());
	return true;
}

// librptr_command_list_commands
// ===============
// prints out a list of all the commands registered
bool librptr_command_list_commands(bool testConds, bool runActions) {
	librptr_print_output("LISTING GAME COMMANDS:\n" + librptr_settings.commands, EventPlayer());
	return true;
}

// librptr_command_players
// ===============
// prints player info (name + color + permissions level)
bool librptr_command_players(bool testConds, bool runActions) {
	int player = 0;
	text player_info;
	text output = StringToText("> Listing players: ");
	
	while( player < LIBRPTR_MAX_PLAYERS ) {
		if( PlayerStatus(player) != c_playerStatusUnused ) {
			if( PlayerStatus(player) == c_playerStatusActive || PlayerType(player) != c_playerTypeUser ) {
				player_info = librptr_player_name_colored(player) + StringToText(" (") + PlayerColorName(PlayerGetColorIndex(player, false)) + StringToText(")");
			} else { // player left: print info in grey
				player_info = TextWithColor( PlayerName(player) + StringToText(" (") + PlayerColorName(PlayerGetColorIndex(player, false)) + StringToText(") (Left)"), Color(35,35,35) );
			}
			
			// display mod or admin status
			if( librptr_player[player].permission_level == LIBRPTR_PERMISSIONS_LEVEL_MOD ) {
				player_info = player_info + StringToText(" (Mod)");
			}
			else if( librptr_player[player].permission_level == LIBRPTR_PERMISSIONS_LEVEL_ADMIN ) {
				player_info = player_info + StringToText(" (Admin)");
			}
			
			output = output + StringToText("\n") + player_info;
		}
		player += 1;
	}

	librptr_print_text(output, PlayerGroupSingle(EventPlayer()));

	return true;
}


