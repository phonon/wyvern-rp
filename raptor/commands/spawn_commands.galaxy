//=========================================================
//		Raptor Roleplaying Engine
//		Copyright (c) 2014 , Xethyr.407 [NA] / @90-proof
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

// librptr_command_spawn
// =======================
// Deals with redirecting the @spawn command to a proper unit create command
// all actual unit creation is handled in engine/unit.galaxy
bool librptr_command_spawn(bool testConds, bool runActions) {
	point spawn_point = librptr_player[EventPlayer()].mouse_position;
	int count = StringToInt( StringWord(librptr_player[EventPlayer()].chat_msg, 2) );
	string type = StringWord(librptr_player[EventPlayer()].chat_msg, 3);
	//region r = null; //TODO ADD SPAWNING AT REGIONS
	
	// if count is 0, try checking 3rd index, swap unit type to 2nd index
	// (this allows either @spawn # unit or @spawn unit #)
	if( count == 0 ) {
		count = StringToInt( StringWord(librptr_player[EventPlayer()].chat_msg, 3) );
		type = StringWord(librptr_player[EventPlayer()].chat_msg, 2);
	}
	
	// get unit type
	if( type == "" ) {
		librptr_print_error("INVALID UNIT TYPE", EventPlayer());
		return false;
	}
	else {
		type = UnitTypeFromString(type);
		//type = librtpr_catalog_get( c_gameCatalogUnit, type );
		if (type == "" || !CatalogEntryIsValid(c_gameCatalogUnit, type) || UnitTypeTestFlag(type, c_unitFlagMissile) ) {
			librptr_print_error("INVALID UNIT TYPE", EventPlayer());
			return false;
		}
	}
	
	// if count is <= 0, then turn on mouse-click spawning
	if( count <= 0 ) {
		librptr_print_output("SPAWNING: " + type + "\n(Press [Left Mouse] to place, [Right Mouse] to cancel)", EventPlayer());
		librptr_spawn_create_splat(type, EventPlayer());
		librptr_player[EventPlayer()].is_placing_unit = true; 
		return true;
	}

	// otherwise spawn a number of units
	librptr_player[EventPlayer()].context = UnitGroupEmpty();
	while (count > 0) {
		librptr_unit_create(type, EventPlayer(), spawn_point, 270.0);
		count -= 1;
	}
	
	return true;
}
