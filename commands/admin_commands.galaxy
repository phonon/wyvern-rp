//=========================================================
//		Wyvern Roleplaying Engine
//		Copyright (c) 2014 , Xethyr.407 [NA] / @nmosfet
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

// libwyv_command_ban
// ====================
// bans a player (removes all player's units from map too)
void libwyv_command_ban(int user, unitgroup u, string argv) {
	int target_player = libwyv_color_to_player( StringWord(argv, 2) ); //GET PLAYER COLOR FROM STRING.
	unitgroup g;

	// check if player is valid
	if( target_player == -1 || PlayerType(target_player) != c_playerTypeUser ) {
		libwyv_print_error(user, "Invalid player");
		return;
	}

	if( libwyv_player[user].permission_level < LIBWYV_PERMISSIONS_LEVEL_MOD ) {
		libwyv_print_error(user, "Only moderators and admins can use \\ban");
		return;
	}
	if( libwyv_player[user].permission_level <= libwyv_player[target_player].permission_level ) {
		libwyv_print_error(user, "You cannot ban someone of equal or greater rank than you");
		return;
	}

	GameOver( target_player, c_gameOverDefeat, false, true );

	// remove all of a player's units
	g = UnitGroup( null, target_player, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0 );
	UnitGroupLoopBegin(g);
	while( !UnitGroupLoopDone() ) {
		UnitRemove( UnitGroupLoopCurrent() );
		UnitGroupLoopStep();
	}
	UnitGroupLoopEnd();

	libwyv_print_text(PlayerGroupAll(), libwyv_player_name_colored(target_player) + StringToText(" has been banned by ") + libwyv_player_name_colored(user));

	return;
}

// libwyv_command_disable
// ====================
// prevents player from using commands
// all chat instead routed directly to OOC
void libwyv_command_disable(int user, unitgroup u, string argv) {
	int target_player = libwyv_color_to_player( StringWord(argv, 2) ); //GET PLAYER COLOR FROM STRING.

	// check if player is valid
	if( target_player == -1 || PlayerType(target_player) != c_playerTypeUser ) {
		libwyv_print_error(user, "Invalid player");
		return;
	}

	if( libwyv_player[user].permission_level < LIBWYV_PERMISSIONS_LEVEL_MOD ) {
		libwyv_print_error(user, "Only moderators and admins can use \\disable");
		return;
	}
	if( libwyv_player[user].permission_level <= libwyv_player[target_player].permission_level ) {
		libwyv_print_error(user, "You cannot disable/enable someone of equal or greater rank than you");
		return;
	}

	libwyv_player[target_player].disabled = true;
	libwyv_print_text(PlayerGroupAll(), libwyv_player_name_colored(target_player) + StringToText(" has been disabled by ") + libwyv_player_name_colored(user));

	return;
}

// libwyv_command_enable
// ====================
// "enables" a player; allows commands to be used
void libwyv_command_enable(int user, unitgroup u, string argv) {
	int target_player = libwyv_color_to_player( StringWord(argv, 2) ); //GET PLAYER COLOR FROM STRING.

	// check if player is valid
	if( target_player == -1 || PlayerType(target_player) != c_playerTypeUser ) {
		libwyv_print_error(user, "Invalid player");
		return;
	}

	if( libwyv_player[user].permission_level < LIBWYV_PERMISSIONS_LEVEL_MOD ) {
		libwyv_print_error(user, "Only moderators and admins can use \\enable");
		return;
	}
	if( libwyv_player[user].permission_level <= libwyv_player[target_player].permission_level ) {
		libwyv_print_error(user, "You cannot disable/enable someone of equal or greater rank than you");
		return;
	}

	libwyv_player[target_player].disabled = false;
	libwyv_print_text(PlayerGroupAll(), libwyv_player_name_colored(target_player) + StringToText(" has been enabled by ") + libwyv_player_name_colored(user));

	return;
}

// libwyv_command_mute
// ====================
// prevents player's messages appearing in chat
void libwyv_command_mute(int user, unitgroup u, string argv) {
	int target_player = libwyv_color_to_player( StringWord(argv, 2) ); //GET PLAYER COLOR FROM STRING.

	// check if player is valid
	if( target_player == -1 || PlayerType(target_player) != c_playerTypeUser ) {
		libwyv_print_error(user, "Invalid player");
		return;
	}

	if( libwyv_player[user].permission_level < LIBWYV_PERMISSIONS_LEVEL_MOD ) {
		libwyv_print_error(user, "Only moderators and admins can use \\mute");
		return;
	}
	if( libwyv_player[user].permission_level <= libwyv_player[target_player].permission_level ) {
		libwyv_print_error(user, "You cannot mute/unmute someone of equal or greater rank than you");
		return;
	}

	libwyv_player[target_player].muted = true;
	libwyv_print_text(PlayerGroupAll(), libwyv_player_name_colored(target_player) + StringToText(" has been muted by ") + libwyv_player_name_colored(user));

	return;
}

// libwyv_command_unmute
// ====================
// unmutes a player (messages can appear in chat)
void libwyv_command_unmute(int user, unitgroup u, string argv) {
	int target_player = libwyv_color_to_player( StringWord(argv, 2) ); //GET PLAYER COLOR FROM STRING.

	// check if player is valid
	if( target_player == -1 || PlayerType(target_player) != c_playerTypeUser ) {
		libwyv_print_error(user, "Invalid player");
		return;
	}

	if( libwyv_player[user].permission_level < LIBWYV_PERMISSIONS_LEVEL_MOD ) {
		libwyv_print_error(user, "Only moderators and admins can use \\unmute");
		return;
	}
	if( libwyv_player[user].permission_level <= libwyv_player[target_player].permission_level ) {
		libwyv_print_error(user, "You cannot mute/unmute someone of equal or greater rank than you");
		return;
	}

	libwyv_player[target_player].muted = false;
	libwyv_print_text(PlayerGroupAll(), libwyv_player_name_colored(target_player) + StringToText(" has been unmuted by ") + libwyv_player_name_colored(user));

	return;
}

// libwyv_command_promote
// ================
// promotes a player to moderator status
void libwyv_command_promote(int user, unitgroup u, string argv) {
	int target_player = libwyv_color_to_player( StringWord(argv, 2) ); //GET PLAYER COLOR FROM STRING.

	// check if player is valid
	if( target_player == -1 || PlayerType(target_player) != c_playerTypeUser ||
		target_player == user || libwyv_player[target_player].permission_level == LIBWYV_PERMISSIONS_LEVEL_ADMIN) {
		libwyv_print_error(user, "Invalid player");
		return;
	}

	if( libwyv_player[user].permission_level < LIBWYV_PERMISSIONS_LEVEL_ADMIN ) {
		libwyv_print_error(user, "Only admins can promote/demote moderators");
		return;
	}

	libwyv_player[target_player].permission_level = LIBWYV_PERMISSIONS_LEVEL_MOD;

	libwyv_print_text(PlayerGroupAll(), libwyv_player_name_colored(target_player) + StringToText(" has been promoted to moderator by ") + libwyv_player_name_colored(user));

	return;
}

// libwyv_command_demote
// ================
// sets a player to default status
void libwyv_command_demote(int user, unitgroup u, string argv) {
	int target_player = libwyv_color_to_player( StringWord(argv, 2) ); //GET PLAYER COLOR FROM STRING.

	// check if player is valid
	if( target_player == -1 || PlayerType(target_player) != c_playerTypeUser ||
		target_player == user || libwyv_player[target_player].permission_level == LIBWYV_PERMISSIONS_LEVEL_ADMIN) {
		libwyv_print_error(user, "Invalid player");
		return;
	}

	if( libwyv_player[user].permission_level < LIBWYV_PERMISSIONS_LEVEL_ADMIN ) {
		libwyv_print_error(user, "Only admins can promote/demote moderators");
		return;
	}

	libwyv_player[target_player].permission_level = LIBWYV_PERMISSIONS_LEVEL_DEFAULT;

	libwyv_print_text(PlayerGroupAll(), libwyv_player_name_colored(target_player) + StringToText(" has been demoted by ") + libwyv_player_name_colored(user));

	return;
}
